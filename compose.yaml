name: lab-icn-web

volumes:
  postgresql-data:
    driver: local

networks:
  app-network:
    driver: bridge
  traefik-network:
    driver: bridge

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "3000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - 3000
    env_file: .env
    environment:
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      NEXT_AUTH_SECRET: ${NEXT_AUTH_SECRET}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_WHATSAPP_GROUP: ${NEXT_PUBLIC_WHATSAPP_GROUP}
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=!PathPrefix(`/api/v1`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.docker.network=lab-icn-web_traefik-network"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - 80
    environment:
      CONFIG_FILE: /run/.secret.json
    volumes:
      - ./user-service/secret.json:/run/.secret.json
    networks:
      - app-network
      - traefik-network
    depends_on:
      - postgresql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/api/v1/users`)"
      - "traefik.http.routers.user-service.entrypoints=web"
      - "traefik.docker.network=lab-icn-web_traefik-network"

  token-service:
    build:
      context: ./token-service
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - 80
    environment:
      CONFIG_FILE: /run/.secret.json
    volumes:
      - ./token-service/secret.json:/run/.secret.json
    networks:
      - app-network
      - traefik-network
    depends_on:
      - postgresql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.token-service.rule=PathPrefix(`/api/v1/tokens`)"
      - "traefik.http.routers.token-service.entrypoints=web"
      - "traefik.docker.network=lab-icn-web_traefik-network"

  postgresql:
    image: postgres:17.2-alpine3.20
    env_file: .env
    environment:
      postgresql_USER: ${POSTGRES_USER}
      postgresql_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
