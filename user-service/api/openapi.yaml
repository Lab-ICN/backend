openapi: 3.0.0
info:
  title: User Service API
  description: API for managing users in the system.
  version: 1.0.0
servers:
  - url: http://{host}:{port}/api/v1
    description: Development server

paths:
  /users/self:
    get:
      summary: Get the authenticated user's details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized access

  /users:
    post:
      summary: Create a new user or upload a bulk CSV
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserParams'
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: string
                  format: binary
              required:
                - attachment
        required: true
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity - Invalid file format or payload

  /users/{id}:
    delete:
      summary: Delete a user by ID
      security:
        - apiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        username:
          type: string
        fullname:
          type: string
        isMember:
          type: boolean
        internshipStartDate:
          type: string
          format: date-time
      required:
        - id
        - email
        - username
        - fullname
        - isMember
        - internshipStartDate

    CreateUserParams:
      type: object
      properties:
        email:
          type: string
          format: email
        username:
          type: string
        fullname:
          type: string
        isMember:
          type: boolean
        internshipStartDate:
          type: string
          format: date-time
      required:
        - email
        - username
        - fullname
        - isMember
        - internshipStartDate
